{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

() recv_internal() {
}

(int) length(tuple tup) asm "TLEN";


(tuple) asm_go_brr(tuple matrixA, tuple matrixB) asm """
  DUP
  FIRST
  TLEN
  OVER
  TLEN

  ZERO // reference
  NIL // reference

  5 ROLL
  DUP
  TLEN
  UNTUPLEVAR
  
  DEPTH
  ZERO
  REVX

  ZERO // row

  DEPTH
  6 PUSHINT
  SUB
  REPEAT:<{ // for row
    // add NIL(result row) ZERO(col) columns

    s5 s4 s2 PUSH3

    REPEAT:<{ // for col
      // add ZERO(sum) ZERO(k)
      s6 s6 PUSH2

      s7 PUSH
      REPEAT:<{ // for k
        s1 s10 s1 XCPU2
        INDEXVAR

        s6 s2 PUSH2
        INDEXVAR
        s4 PUSH
        INDEXVAR

        MUL
        ADD
        
        SWAP
        INC
      }>
      DROP
      s1 s2 XCHG
      TPUSH
      SWAP

      INC
    }>
    DROP

    DEPTH
    DEC
    ROLLREVX

    1 6 BLKDROP2

    INC
  }>

  6 BLKDROP

  DEPTH
  ZERO
  REVX

  DEPTH
  TUPLEVAR
""";




;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  return asm_go_brr(matrixA, matrixB);
}

