{-
  TASK 4 - Caesar Cipher
  Implement a Caesar cipher encryption and decryption functions.
  The input is a string (https://docs.ton.org/develop/smart-contracts/guidelines/internal-messages#simple-message-with-comment)
  where the text is encrypted in a cell (after 32bit 00000000 prefix flag), the algorithm rotates the characters and the last ASCII
  character should go to the beginning. Return new text encoded in cell.
-}

() recv_internal() {
}


(cell) shift_text(cell text, int shift) asm """
  26 PUSHINT
  MOD
  DUP

  2 PUSHINT
  3 PUSHINT
  4 PUSHINT
  5 PUSHINT
  6 PUSHINT
  7 PUSHINT
  8 PUSHINT
  9 PUSHINT
  10 PUSHINT
  11 PUSHINT
  12 PUSHINT
  13 PUSHINT
  14 PUSHINT
  15 PUSHINT
  16 PUSHINT
  17 PUSHINT
  18 PUSHINT
  19 PUSHINT
  20 PUSHINT
  21 PUSHINT
  22 PUSHINT
  23 PUSHINT
  24 PUSHINT
  25 PUSHINT
  26 PUSHINT
  27 PUSHINT
  28 PUSHINT
  29 PUSHINT
  30 PUSHINT
  31 PUSHINT
  32 PUSHINT
  33 PUSHINT
  34 PUSHINT
  35 PUSHINT
  36 PUSHINT
  37 PUSHINT
  38 PUSHINT
  39 PUSHINT
  40 PUSHINT
  41 PUSHINT
  42 PUSHINT
  43 PUSHINT
  44 PUSHINT
  45 PUSHINT
  46 PUSHINT
  47 PUSHINT
  48 PUSHINT
  49 PUSHINT
  50 PUSHINT
  51 PUSHINT
  52 PUSHINT
  53 PUSHINT
  54 PUSHINT
  55 PUSHINT
  56 PUSHINT
  57 PUSHINT
  58 PUSHINT
  59 PUSHINT
  60 PUSHINT
  61 PUSHINT
  62 PUSHINT
  63 PUSHINT
  64 PUSHINT
  65 PUSHINT
  66 PUSHINT
  67 PUSHINT
  68 PUSHINT
  69 PUSHINT
  70 PUSHINT
  71 PUSHINT
  72 PUSHINT
  73 PUSHINT
  74 PUSHINT
  75 PUSHINT
  76 PUSHINT
  77 PUSHINT
  78 PUSHINT
  79 PUSHINT
  80 PUSHINT
  81 PUSHINT
  82 PUSHINT
  83 PUSHINT
  84 PUSHINT
  85 PUSHINT
  86 PUSHINT
  87 PUSHINT
  88 PUSHINT
  89 PUSHINT
  90 PUSHINT

  1 PUSHINT
  s0 90 s() XCHG

  DUP
  26 PUSHINT
  SUBR
  BLKSWX

  91 PUSHINT
  92 PUSHINT
  93 PUSHINT
  94 PUSHINT
  95 PUSHINT
  96 PUSHINT
  97 PUSHINT
  98 PUSHINT
  99 PUSHINT
  100 PUSHINT
  101 PUSHINT
  102 PUSHINT
  103 PUSHINT
  104 PUSHINT
  105 PUSHINT
  106 PUSHINT
  107 PUSHINT
  108 PUSHINT
  109 PUSHINT
  110 PUSHINT
  111 PUSHINT
  112 PUSHINT
  113 PUSHINT
  114 PUSHINT
  115 PUSHINT
  116 PUSHINT
  117 PUSHINT
  118 PUSHINT
  119 PUSHINT
  120 PUSHINT
  121 PUSHINT
  122 PUSHINT

  ZERO
  s0 123 s() XCHG

  DUP
  26 PUSHINT
  SUBR
  BLKSWX

  123 PUSHINT
  124 PUSHINT
  125 PUSHINT
  126 PUSHINT
  127 PUSHINT
  128 PUSHINT
  129 PUSHINT
  130 PUSHINT
  131 PUSHINT
  132 PUSHINT
  133 PUSHINT
  134 PUSHINT
  135 PUSHINT
  136 PUSHINT
  137 PUSHINT
  138 PUSHINT
  139 PUSHINT
  140 PUSHINT
  141 PUSHINT
  142 PUSHINT
  143 PUSHINT
  144 PUSHINT
  145 PUSHINT
  146 PUSHINT
  147 PUSHINT
  148 PUSHINT
  149 PUSHINT
  150 PUSHINT
  151 PUSHINT
  152 PUSHINT
  153 PUSHINT
  154 PUSHINT
  155 PUSHINT
  156 PUSHINT
  157 PUSHINT
  158 PUSHINT
  159 PUSHINT
  160 PUSHINT
  161 PUSHINT
  162 PUSHINT
  163 PUSHINT
  164 PUSHINT
  165 PUSHINT
  166 PUSHINT
  167 PUSHINT
  168 PUSHINT
  169 PUSHINT
  170 PUSHINT
  171 PUSHINT
  172 PUSHINT
  173 PUSHINT
  174 PUSHINT
  175 PUSHINT
  176 PUSHINT
  177 PUSHINT
  178 PUSHINT
  179 PUSHINT
  180 PUSHINT
  181 PUSHINT
  182 PUSHINT
  183 PUSHINT
  184 PUSHINT
  185 PUSHINT
  186 PUSHINT
  187 PUSHINT
  188 PUSHINT
  189 PUSHINT
  190 PUSHINT
  191 PUSHINT
  192 PUSHINT
  193 PUSHINT
  194 PUSHINT
  195 PUSHINT
  196 PUSHINT
  197 PUSHINT
  198 PUSHINT
  199 PUSHINT
  200 PUSHINT
  201 PUSHINT
  202 PUSHINT
  203 PUSHINT
  204 PUSHINT
  205 PUSHINT
  206 PUSHINT
  207 PUSHINT
  208 PUSHINT
  209 PUSHINT
  210 PUSHINT
  211 PUSHINT
  212 PUSHINT
  213 PUSHINT
  214 PUSHINT
  215 PUSHINT
  216 PUSHINT
  217 PUSHINT
  218 PUSHINT
  219 PUSHINT
  220 PUSHINT
  221 PUSHINT
  222 PUSHINT
  223 PUSHINT
  224 PUSHINT
  225 PUSHINT
  226 PUSHINT
  227 PUSHINT
  228 PUSHINT
  229 PUSHINT
  230 PUSHINT
  231 PUSHINT
  232 PUSHINT
  233 PUSHINT
  234 PUSHINT
  235 PUSHINT
  236 PUSHINT
  237 PUSHINT
  238 PUSHINT
  239 PUSHINT
  240 PUSHINT
  241 PUSHINT
  242 PUSHINT
  243 PUSHINT
  244 PUSHINT
  245 PUSHINT
  246 PUSHINT
  247 PUSHINT
  248 PUSHINT
  249 PUSHINT
  250 PUSHINT
  251 PUSHINT

  TUPLEVAR // stack = text map

  NEWC
  ROT
  CTOS // map builder slice

  DUP
  SBITS
  3 RSHIFT#
  REPEAT:<{ // map builder slice
    8 LDU
    s3 s1 PUXC
    INDEXVAR
    ROT
    8 STU
    SWAP
  }>

  // builder map builder1 slice1 builder

  DUP
  SDEPTH
  REPEAT:<{
    LDREFRTOS
    NIP
    NEWC

    s3 s0 s0 XCHG3

    DUP
    SBITS
    3 RSHIFT#
    REPEAT:<{ // map builder slice
      8 LDU
      s3 s1 PUXC
      INDEXVAR
      ROT
      8 STU
      SWAP
    }>
  }> 

  // builder0 ... builder_n-1 map builder_n slice 
  
  ROT
  DROP2
  DEPTH
  DEC
  REPEAT:<{ STBREFR }>
  ENDC
""";

  






;; testable
(cell) caesar_cipher_encrypt(int shift, cell text) method_id {
  return shift_text(text, shift);
}

;; testable
(cell) caesar_cipher_decrypt(int shift, cell text) method_id {
  return shift_text(text, - shift);
}
